/*
 * 
 *  Matthew Hickey
 * 
 * 
 */
import java.awt.*;
import java.util.Random;
import java.applet.*;

public class HappyFace extends Applet
{     
	
	int[] data = {10, 20, 35, 20, 15};
	
	
    public void paint(Graphics g)
    {         
    	Font f = new Font("Helvetica", Font.BOLD,20);
    	g.setFont(f);
    	createPieChart(data, g);
    	createHistogram(data, g);
    	/* int width = this.getWidth(), length = this.getHeight();
    	this.setSize(width, length);
	    Font f = new Font("Helvetica", Font.BOLD,20);
	    g.setFont(f);
	    g.drawString("My Pie Chart!", 50, 30);
	    int startAngle = 90;
	    g.setColor(Color.blue);
	    int arcAngle = (int)((data[0]/95f)*360f);
	    g.fillArc(100, 180, 150, 150, startAngle, arcAngle);
	    startAngle += arcAngle;
	    
	    g.setColor(Color.green);
	    arcAngle = (int)((data[1]/95f)*360f);
	    g.fillArc(100, 180, 150, 150, startAngle, arcAngle);
	    startAngle += arcAngle;
	    
	    g.setColor(Color.red);
	    arcAngle = (int)((data[2]/95f)*360f);
	    g.fillArc(100, 180, 150, 150, startAngle, arcAngle);
	    startAngle += arcAngle;
	    
	    g.setColor(Color.pink);
	    arcAngle = (int)((data[3]/95f)*360f);
	    g.fillArc(100, 180, 150, 150, startAngle, arcAngle);
	    startAngle += arcAngle;
	    
	    arcAngle = (int)((data[4]/95f)*360f);
	    g.fillArc(100, 180, 150, 150, startAngle, arcAngle);
	    startAngle += arcAngle; */
	    
	    
	    
	    /*g.drawOval(0, 0, width, length);
	    g.fillOval(90, 120, 50, 20);
	    g.fillOval(190, 120, 50, 20);
	    g.drawLine(165, 125, 165, 175);
	    g.setColor(Color.BLUE);
	    g.fillArc(110, 130, 95, 95, 0, -180);*/
	    
    }
    
    public void createPieChart(int[] values, Graphics graphics) {
    	
    	float total = 0;
    	int startAngle = 0;
    	Random random = new Random(123162);
    	
    	graphics.drawString("Pie Chart", 55, 20);
    	
    	for (int i = 0; i < values.length; i++) {
			total += values[i];
		}
    	
    	for (int i = 0; i < values.length; i++) {
    		int r = random.nextInt(255);
    		int g = random.nextInt(255);
    		int b = random.nextInt(255);
			graphics.setColor(new Color(r,g,b));
			int arcAngle = (int)((values[i]/total)*360f);
			System.out.println(arcAngle);
			graphics.fillArc(25, 25, 150, 150, startAngle, arcAngle);
			startAngle += arcAngle;
		}
    }
    
    public void createHistogram(int[] values, Graphics graphics) {
    	
    	int highestValue = 0;
    	int x = 25;
    	Random random = new Random(123512);
    	
    	graphics.drawString("Histogram", 55, 200);
    	
    	for (int i = 0; i < values.length; i++) {
			if (values[i] > highestValue) {
				highestValue = values[i];
			}
		}
    	
    	for (int i = 0; i < values.length; i++) {
    		int height = (values[i]*100)/highestValue;
    		int r = random.nextInt(255);
    		int g = random.nextInt(255);
    		int b = random.nextInt(255);
    		graphics.setColor(new Color(r,g,b));
    		graphics.fillRect(x, 350, 20, -height);
    		x += 30;
    		
    	}
    }
    
    
}